# Generated by Django 5.2.3 on 2025-07-26 10:56

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('speaking_time', 'Speaking Time'), ('words_spoken', 'Words Spoken'), ('clarity_improvement', 'Clarity Improvement'), ('fluency_improvement', 'Fluency Improvement'), ('consistency', 'Consistency'), ('level_milestone', 'Level Milestone')], max_length=30)),
                ('target_value', models.FloatField()),
                ('icon', models.CharField(default='üèÜ', max_length=50)),
                ('experience_reward', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('customization_reward', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpeechExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('exercise_type', models.CharField(choices=[('pronunciation', 'Pronunciation'), ('fluency', 'Fluency'), ('vocabulary', 'Vocabulary'), ('storytelling', 'Storytelling'), ('conversation', 'Conversation')], max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=10)),
                ('level_required', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('prompt_text', models.TextField()),
                ('target_words', models.JSONField(default=list)),
                ('expected_duration', models.DurationField()),
                ('experience_reward', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CharacterCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_color', models.CharField(choices=[('brown', 'Brown'), ('golden', 'Golden'), ('black', 'Black'), ('white', 'White'), ('spotted', 'Spotted'), ('blue', 'Blue Magic'), ('purple', 'Purple Magic'), ('rainbow', 'Rainbow Magic')], default='brown', max_length=20)),
                ('eye_color', models.CharField(choices=[('brown', 'Brown'), ('blue', 'Blue'), ('green', 'Green'), ('amber', 'Amber'), ('purple', 'Purple Magic'), ('rainbow', 'Rainbow Magic')], default='brown', max_length=20)),
                ('accessory', models.CharField(choices=[('none', 'None'), ('hat', 'Hat'), ('bow_tie', 'Bow Tie'), ('collar', 'Collar'), ('glasses', 'Glasses'), ('cape', 'Super Cape'), ('crown', 'Royal Crown'), ('wings', 'Magic Wings')], default='none', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='character_customization', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpeechSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration', models.DurationField()),
                ('words_spoken', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('clarity_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('fluency_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('confidence_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('overall_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('experience_gained', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speech_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('completed', models.BooleanField(default=False)),
                ('feedback_text', models.TextField(blank=True)),
                ('areas_for_improvement', models.JSONField(default=list)),
                ('strengths', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_attempts', to=settings.AUTH_USER_MODEL)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='therapy.speechexercise')),
                ('speech_session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_attempt', to='therapy.speechsession')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('experience_points', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_speaking_time', models.DurationField(default='00:00:00')),
                ('improvement_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='therapy_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnlockedCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customization_type', models.CharField(choices=[('body_color', 'Body Color'), ('eye_color', 'Eye Color'), ('accessory', 'Accessory')], max_length=20)),
                ('customization_value', models.CharField(max_length=20)),
                ('level_required', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unlocked_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unlocked_customizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'customization_type', 'customization_value')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='therapy.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
